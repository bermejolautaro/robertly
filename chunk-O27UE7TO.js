import{a as u,b as l,o as c,p as m,t as $,x as g}from"./chunk-F4UEUSBD.js";import{$ as d,A as p,ea as h}from"./chunk-HR6XHDMR.js";var D=(()=>{let n=class n{constructor(){this.http=h(l),this.authService=h($),this.cacheService=h(m),this.apiUrl=h(g),this.endpoint=`${this.apiUrl}/exercise-logs`}getExerciseLogById(e){let t=this.authService.user.value()?.userFirebaseUuid,i="getExerciseLogById",r=`${t}:${i}:${e}`;return this.http.get(`${this.endpoint}/${e}`).pipe(c(this.cacheService,r))}getExerciseLogs(e=0,t=null,i=null,r=null,s=null){let a=new u;t&&(a=a.append("userId",t)),i&&(a=a.append("exerciseType",i)),r&&(a=a.append("exerciseId",r)),s&&(a=a.append("weightInKg",s));let f=this.authService.user.value()?.userFirebaseUuid,v="getExerciseLogs",y=`${f}:${v}:${e}:${t}:${i}:${r}:${s}`;return this.http.get(`${this.endpoint}?page=${e}&count=10`,{params:a}).pipe(c(this.cacheService,y))}getSeriesPerMuscle(){let e=this.authService.user.value()?.userFirebaseUuid,t="getSeriesPerMuscle",i=`${e}:${t}`;return this.http.get(`${this.endpoint}/series-per-muscle`).pipe(c(this.cacheService,i))}getDaysTrained(){let e=`${this.authService.userUuid()}:${"getDaysTrained"}`;return this.http.get(`${this.endpoint}/days-trained`).pipe(c(this.cacheService,e))}getDaysTrained2(){let e=`${this.authService.userUuid()}:${"getDaysTrained2"}`;return this.http.get(`${this.endpoint}/days-trained-2`).pipe(c(this.cacheService,e))}getRecentlyUpdated(){let e=this.authService.user.value()?.userFirebaseUuid,t="getRecentlyUpdated",i=`${e}:${t}`;return this.http.get(`${this.endpoint}/recently-updated`).pipe(p(r=>r.data),c(this.cacheService,i))}getExerciseLogsLatestWorkout(){let e=this.authService.user.value()?.userFirebaseUuid,t="getExerciseLogsLatestWorkout",i=`${e}:${t}`;return this.http.get(`${this.endpoint}/latest-workout`).pipe(p(r=>r.data),c(this.cacheService,i))}getFilters(e=null,t,i=null,r=null){let s=new u;return e&&(s=s.append("userId",e)),t&&(s=s.append("exerciseId",t)),i&&(s=s.append("type",i)),r&&(s=s.append("weightInKg",r)),this.http.get(`${this.endpoint}/filters`,{params:s})}createExerciseLog(e){return this.http.post(`${this.endpoint}`,e)}updateExerciseLog(e){return this.http.put(`${this.endpoint}/${e.id}`,e)}deleteExerciseLog(e){return this.http.delete(`${this.endpoint}/${e}`)}};n.\u0275fac=function(t){return new(t||n)},n.\u0275prov=d({token:n,factory:n.\u0275fac,providedIn:"root"});let o=n;return o})();export{D as a};
